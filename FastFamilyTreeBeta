<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fast Family Tree - Professional Pedigree Chart Creator</title>
    <meta name="description" content="Create professional family pedigree charts with standardized medical symbols, patterns, and genealogical conventions.">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    colors: {
                        primary: {
                            50: '#f0f9ff',
                            100: '#e0f2fe',
                            200: '#bae6fd',
                            300: '#7dd3fc',
                            400: '#38bdf8',
                            500: '#0ea5e9',
                            600: '#0284c7',
                            700: '#0369a1',
                            800: '#075985',
                            900: '#0c4a6e'
                        },
                        success: {
                            50: '#f0fdf4',
                            100: '#dcfce7',
                            200: '#bbf7d0',
                            300: '#86efac',
                            400: '#4ade80',
                            500: '#22c55e',
                            600: '#16a34a',
                            700: '#15803d',
                            800: '#166534',
                            900: '#14532d'
                        },
                        warning: {
                            50: '#fffbeb',
                            100: '#fef3c7',
                            200: '#fde68a',
                            300: '#fcd34d',
                            400: '#fbbf24',
                            500: '#f59e0b',
                            600: '#d97706',
                            700: '#b45309',
                            800: '#92400e',
                            900: '#78350f'
                        },
                        danger: {
                            50: '#fef2f2',
                            100: '#fee2e2',
                            200: '#fecaca',
                            300: '#fca5a5',
                            400: '#f87171',
                            500: '#ef4444',
                            600: '#dc2626',
                            700: '#b91c1c',
                            800: '#991b1b',
                            900: '#7f1d1d'
                        },
                        neutral: {
                            50: '#fafafa',
                            100: '#f5f5f5',
                            200: '#e5e5e5',
                            300: '#d4d4d4',
                            400: '#a3a3a3',
                            500: '#737373',
                            600: '#525252',
                            700: '#404040',
                            800: '#262626',
                            900: '#171717'
                        }
                    }
                }
            }
        }
    </script>
    <style>
        .pedigree-canvas {
            cursor: crosshair;
        }

        .symbol-preview {
            width: 24px;
            height: 24px;
            display: inline-block;
            margin-right: 8px;
        }

        /* Selected button styling - Scale + Shadow Effect */
        .selected-symbol {
            transform: scale(1.10) translateY(-2px) !important;
            box-shadow: 0 12px 24px rgba(93, 92, 222, 0.4), 
                        0 6px 12px rgba(0, 0, 0, 0.15) !important;
            transition: all 0.2s ease;
            z-index: 10;
            position: relative;
        }

        /* Enhanced hover effect for non-selected buttons */
        button[id^="btn-"]:not(.selected-symbol):hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            transition: all 0.2s ease;
        }

        /* Ensure selected state overrides hover */
        .selected-symbol:hover {
            transform: scale(1.10) translateY(-2px) !important;
            box-shadow: 0 16px 32px rgba(93, 92, 222, 0.5), 
                        0 8px 16px rgba(0, 0, 0, 0.2) !important;
        }

        /* Custom scrollbar styling for tools column */
        #toolsScrollArea {
            scrollbar-width: thin;
            scrollbar-color: #ef4444 #f3f4f6;
        }

        #toolsScrollArea::-webkit-scrollbar {
            width: 12px;
        }

        #toolsScrollArea::-webkit-scrollbar-track {
            background: #f3f4f6;
            border-radius: 6px;
        }

        #toolsScrollArea::-webkit-scrollbar-thumb {
            background-color: #ef4444;
            border-radius: 6px;
            border: 2px solid #f3f4f6;
        }

        #toolsScrollArea::-webkit-scrollbar-thumb:hover {
            background-color: #dc2626;
        }

        /* Dark mode scrollbar */
        .dark #toolsScrollArea {
            scrollbar-color: #ef4444 #374151;
        }

        .dark #toolsScrollArea::-webkit-scrollbar-track {
            background: #374151;
        }

        .dark #toolsScrollArea::-webkit-scrollbar-thumb {
            background-color: #ef4444;
            border: 2px solid #374151;
        }

        .dark #toolsScrollArea::-webkit-scrollbar-thumb:hover {
            background-color: #dc2626;
        }

        /* GitHub Pages notice styling */
        .github-notice {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-left: 4px solid #4f46e5;
        }

        .feature-highlight {
            transition: all 0.3s ease;
        }

        .feature-highlight:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }
    </style>
</head>
<body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-white transition-colors duration-200">
    <!-- Header -->
    <header class="sticky top-0 z-40 bg-gray-50 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 p-3">
        <div class="max-w-7xl mx-auto">
            <div class="flex items-center justify-between flex-wrap gap-4">
                <div>
                    <h1 class="text-xl font-bold text-primary-600">Fast Family Tree</h1>
                    <p class="text-xs text-gray-600 dark:text-gray-400 mt-1">Professional pedigree chart creator for medical and genealogical use</p>
                </div>
                
                <!-- GitHub link -->
                <div class="flex items-center space-x-2">
                    <a href="https://github.com/yourusername/fast-family-tree" target="_blank" rel="noopener noreferrer" 
                       class="flex items-center px-3 py-1 bg-gray-800 dark:bg-gray-600 text-white rounded hover:bg-gray-700 dark:hover:bg-gray-500 transition-colors text-sm">
                        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z" clip-rule="evenodd"></path>
                        </svg>
                        View on GitHub
                    </a>
                    <button onclick="toggleDarkMode()" class="p-2 rounded hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors" title="Toggle dark mode">
                        <svg class="w-5 h-5 hidden dark:block" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
                        </svg>
                        <svg class="w-5 h-5 block dark:hidden" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                        </svg>
                    </button>
                </div>
            </div>
            
            <!-- GitHub Pages Notice -->
            <div class="github-notice text-white p-3 rounded-lg mt-3">
                <div class="flex items-start space-x-3">
                    <div class="flex-shrink-0 mt-0.5">
                        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <div>
                        <h4 class="font-semibold text-sm">Welcome to Fast Family Tree!</h4>
                        <p class="text-xs mt-1 opacity-90">This is a completely client-side application - all your data stays private on your device. Perfect for creating professional medical pedigrees and family trees.</p>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <!-- Toolbar -->
    <div class="sticky top-[76px] z-30 bg-gray-100 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 p-3">
        <div class="max-w-7xl mx-auto">
            <!-- Action Buttons -->
            <div class="mb-3 flex flex-wrap gap-2 items-center">
                <button id="btn-jump-instructions" class="w-32 px-3 py-2 bg-neutral-500 text-white rounded hover:bg-neutral-600 transition-colors text-sm whitespace-nowrap">📓 Instructions</button>
                <button id="btn-keyboard-shortcuts" class="w-32 px-3 py-2 bg-cyan-500 text-white rounded hover:bg-cyan-600 transition-colors text-sm whitespace-nowrap">⌨️ Shortcuts</button>
                <button id="btn-download" class="w-32 px-3 py-2 bg-success-600 text-white rounded hover:bg-success-700 transition-colors text-sm whitespace-nowrap">📄 Download PDF</button>
                <button id="btn-save" class="w-32 px-3 py-2 bg-primary-600 text-white rounded hover:bg-primary-700 transition-colors text-sm whitespace-nowrap">💾 Save Canvas</button>
                <button id="btn-load" class="w-32 px-3 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors text-sm whitespace-nowrap">📁 Load Canvas</button>
            </div>

            <!-- Pattern Legend -->
            <div class="mb-3 p-2 bg-white dark:bg-gray-700 rounded border border-gray-200 dark:border-gray-600 w-1/2">
                <div class="flex items-center justify-between mb-2">
                    <div class="flex items-center space-x-2">
                        <h3 class="text-xs font-semibold">Disorder Pattern Legend:</h3>
                        <button id="addPatternBtn" class="px-2 py-1 bg-primary-600 text-white text-xs rounded hover:bg-primary-700 transition-colors">+ Add Pattern</button>
                    </div>
                    <button id="togglePatternLegend" class="px-2 py-1 bg-gray-500 text-white text-xs rounded hover:bg-gray-600 transition-colors">
                        <span id="legendToggleText">Expand</span>
                    </button>
                </div>

                <div id="patternLegendContent" style="display: none">
                    <div id="patternList" class="space-y-2">
                        <!-- Dynamic pattern entries will be added here -->
                    </div>
                    <div id="emptyPatternMessage" class="text-center py-3 text-xs text-gray-500 dark:text-gray-400">
                        No disorder patterns defined yet. Click "+ Add Pattern" to create your first pattern.
                    </div>
                    <div class="mt-2 pt-2 border-t border-gray-200 dark:border-gray-600">
                        <p class="text-xs text-gray-600 dark:text-gray-400">
                            <strong>Tip:</strong> Each quadrant of a symbol can show a different pattern. Create patterns only for disorders you need to track in your pedigree.
                        </p>
                    </div>
                </div>
            </div>

            <div class="space-y-2">
                <!-- Row 1: Add Symbol Tools -->
                <div class="flex flex-wrap gap-2 items-center">
                    <label class="text-xs font-medium">Add Symbol:</label>
                    <button id="btn-male" class="flex items-center px-2 py-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors text-sm">
                        <canvas class="symbol-preview" width="24" height="24"></canvas>Male
                    </button>
                    <button id="btn-female" class="flex items-center px-2 py-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors text-sm">
                        <canvas class="symbol-preview" width="24" height="24"></canvas>Female
                    </button>
                    <button id="btn-unknown" class="flex items-center px-2 py-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors text-sm">
                        <canvas class="symbol-preview" width="24" height="24"></canvas>Unknown
                    </button>
                    <button id="btn-proband" class="flex items-center px-2 py-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors text-sm">
                        <canvas class="symbol-preview" width="24" height="24"></canvas>Proband
                    </button>
                    <button id="btn-pregnancy" class="flex items-center px-2 py-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors text-sm">
                        <canvas class="symbol-preview" width="24" height="24"></canvas>Pregnancy
                    </button>
                    <button id="btn-miscarriage" class="flex items-center px-2 py-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors text-sm">
                        <canvas class="symbol-preview" width="24" height="24"></canvas>Miscarriage
                    </button>
                    <button id="btn-tab" class="flex items-center px-2 py-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors text-sm">
                        <canvas class="symbol-preview" width="24" height="24"></canvas>TAB
                    </button>
                    <button id="btn-ectopic" class="flex items-center px-2 py-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors text-sm">
                        <canvas class="symbol-preview" width="24" height="24"></canvas>Ectopic Pregnancy
                    </button>
                </div>

                <!-- Row 2: Connection Tools + Editing Tools -->
                <div class="flex flex-wrap gap-2 items-center">
                    <label class="text-xs font-medium">Connect:</label>
                    <button id="btn-connect-family" class="px-2 py-1 bg-emerald-600 text-white rounded hover:bg-emerald-700 transition-colors text-sm">👨‍👩‍👧‍👦 Connect as Family</button>
                    <button id="btn-marriage" class="px-2 py-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors text-sm">Marriage</button>
                    <button id="btn-consanguineous" class="px-2 py-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors text-sm">Consanguineous</button>
                    <button id="btn-offspring" class="px-2 py-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors text-sm">Offspring</button>
                    
                    <!-- Separator -->
                    <div class="w-px h-6 bg-gray-300 dark:bg-gray-600 mx-2"></div>
                    
                    <!-- Edit Tools -->
                    <button id="btn-deceased" class="px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors text-sm">Deceased</button>
                    <button id="btn-separated" class="px-2 py-1 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors text-sm">Separated</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Fixed Tools Column -->
    <div id="toolsColumn" class="fixed left-4 z-30 bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 shadow-lg w-32" style="top: 280px; height: calc(100vh - 320px); max-height: calc(100vh - 320px);">
        <div class="flex flex-col h-full">
            <!-- Header with title -->
            <div class="flex-shrink-0 p-3 pb-2 border-b border-gray-200 dark:border-gray-600">
                <label class="text-xs font-medium text-gray-700 dark:text-gray-300 text-center block">Tools:</label>
            </div>
            
            <!-- Scrollable Tools Area -->
            <div id="toolsScrollArea" class="flex-1 overflow-y-auto overflow-x-hidden">
                <div class="flex flex-col space-y-2 p-3">
                    <button id="btn-templates" class="flex items-center justify-center px-2 py-2 bg-primary-600 text-white rounded hover:bg-primary-700 transition-colors text-sm whitespace-nowrap">Templates</button>
                    <button id="btn-textbox" class="flex items-center justify-center px-2 py-2 bg-indigo-500 text-white rounded hover:bg-indigo-600 transition-colors text-sm whitespace-nowrap">Text Box</button>
                    <button id="btn-select" class="flex items-center justify-center px-2 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors text-sm whitespace-nowrap">Select</button>
                    <button id="btn-undo" class="flex items-center justify-center px-2 py-2 bg-orange-500 text-white rounded hover:bg-orange-600 transition-colors text-sm disabled:bg-gray-400 disabled:cursor-not-allowed whitespace-nowrap" disabled>Undo</button>
                    <button id="btn-copy" class="flex items-center justify-center px-2 py-2 bg-teal-500 text-white rounded hover:bg-teal-600 transition-colors text-sm whitespace-nowrap">Copy</button>
                    <button id="btn-paste" class="flex items-center justify-center px-2 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors text-sm disabled:bg-gray-400 disabled:cursor-not-allowed whitespace-nowrap">Paste</button>
                    <button id="btn-delete" class="flex items-center justify-center px-2 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors text-sm whitespace-nowrap">Delete</button>
                    <button id="btn-clear" class="flex items-center justify-center px-2 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors text-sm whitespace-nowrap">Clear</button>

                    
                    <!-- Zoom Controls -->
                    <div class="border-t border-gray-300 dark:border-gray-600 pt-2 mt-2">
                        <label class="text-xs font-medium text-gray-700 dark:text-gray-300 text-center block mb-1">Zoom:</label>
                        <div class="flex flex-col space-y-1">
                            <button id="btn-zoom-in" class="flex items-center justify-center px-2 py-1 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors text-xs whitespace-nowrap">🔍+ Zoom In</button>
                            <button id="btn-zoom-out" class="flex items-center justify-center px-2 py-1 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors text-xs whitespace-nowrap">🔍- Zoom Out</button>
                            <button id="btn-zoom-reset" class="flex items-center justify-center px-2 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 transition-colors text-xs whitespace-nowrap">🎯 Reset</button>
                            <div id="zoom-display" class="text-xs text-center text-gray-700 dark:text-gray-300 py-1">100%</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Canvas Area - Scrollable -->
    <div class="flex-1 p-4 pl-[140px]"> <!-- Left padding to account for fixed tools column -->
        <div class="max-w-7xl mx-auto">
            <div class="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden">
                <canvas id="pedigreeCanvas" class="pedigree-canvas w-full" width="1200" height="800"></canvas>
            </div>
        </div>
    </div>

    <!-- Features Showcase Section -->
    <section class="bg-gray-50 dark:bg-gray-800 py-12 mt-8">
        <div class="max-w-7xl mx-auto px-4">
            <h2 class="text-2xl font-bold text-center mb-8 text-gray-900 dark:text-white">Professional Features</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <div class="feature-highlight bg-white dark:bg-gray-700 p-6 rounded-lg shadow">
                    <div class="text-primary-600 mb-4">
                        <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                    <h3 class="text-lg font-semibold mb-2">Medical Standards</h3>
                    <p class="text-gray-600 dark:text-gray-300 text-sm">Follows medical pedigree standards with proper symbols, patterns, and genealogical conventions.</p>
                </div>
                
                <div class="feature-highlight bg-white dark:bg-gray-700 p-6 rounded-lg shadow">
                    <div class="text-primary-600 mb-4">
                        <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <h3 class="text-lg font-semibold mb-2">Export & Share</h3>
                    <p class="text-gray-600 dark:text-gray-300 text-sm">Download professional PDFs with legends, save/load projects, and share with colleagues.</p>
                </div>
                
                <div class="feature-highlight bg-white dark:bg-gray-700 p-6 rounded-lg shadow">
                    <div class="text-primary-600 mb-4">
                        <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M18 8a6 6 0 01-7.743 5.743L10 14l-1 1-1 1H6v2H2v-4l4.257-4.257A6 6 0 1118 8zm-6-4a1 1 0 100 2 2 2 0 012 2 1 1 0 102 0 4 4 0 00-4-4z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <h3 class="text-lg font-semibold mb-2">Privacy First</h3>
                    <p class="text-gray-600 dark:text-gray-300 text-sm">All data stays on your device. No servers, no accounts, complete privacy for sensitive family information.</p>
                </div>
                
                <div class="feature-highlight bg-white dark:bg-gray-700 p-6 rounded-lg shadow">
                    <div class="text-primary-600 mb-4">
                        <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"></path>
                        </svg>
                    </div>
                    <h3 class="text-lg font-semibold mb-2">Complete Families</h3>
                    <p class="text-gray-600 dark:text-gray-300 text-sm">Support for complex relationships, twins, half-siblings, adoptions, and assisted reproduction.</p>
                </div>
                
                <div class="feature-highlight bg-white dark:bg-gray-700 p-6 rounded-lg shadow">
                    <div class="text-primary-600 mb-4">
                        <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M4 2a2 2 0 00-2 2v11a3 3 0 106 0V4a2 2 0 00-2-2H4zm1 14a1 1 0 100-2 1 1 0 000 2zm5-1.757l4.9-4.9a2 2 0 000-2.828L13.485 5.1a2 2 0 00-2.828 0L10 5.757v8.486zM16 18H9.071l6-6H16a2 2 0 012 2v2a2 2 0 01-2 2z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <h3 class="text-lg font-semibold mb-2">Custom Patterns</h3>
                    <p class="text-gray-600 dark:text-gray-300 text-sm">Create custom disorder patterns with multiple pattern types and quadrant-based assignments.</p>
                </div>
                
                <div class="feature-highlight bg-white dark:bg-gray-700 p-6 rounded-lg shadow">
                    <div class="text-primary-600 mb-4">
                        <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <h3 class="text-lg font-semibold mb-2">Open Source</h3>
                    <p class="text-gray-600 dark:text-gray-300 text-sm">Free, open-source software you can trust. Fork, modify, and contribute on GitHub.</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="bg-gray-900 text-white py-8 mt-12">
        <div class="max-w-7xl mx-auto px-4 text-center">
            <h3 class="text-lg font-semibold mb-4">Fast Family Tree</h3>
            <p class="text-gray-400 mb-4">Professional pedigree charts for medical and genealogical use</p>
            <div class="flex justify-center space-x-6 mb-4">
                <a href="https://github.com/yourusername/fast-family-tree" target="_blank" rel="noopener noreferrer" class="text-gray-400 hover:text-white transition-colors">
                    <span class="sr-only">GitHub</span>
                    <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                </a>
            </div>
            <p class="text-sm text-gray-500">
                &copy; 2024 Fast Family Tree. Open source software released under MIT License.
            </p>
        </div>
    </footer>

    <!-- Hidden file input for loading canvas -->
    <input type="file" id="loadFileInput" accept=".json" style="display: none;" onchange="loadCanvasFromFile(event)">

    <!-- Text Box Edit Modal -->
    <div id="textBoxModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden p-4">
        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg max-w-sm w-full max-h-screen overflow-y-auto">
            <h3 class="text-lg font-semibold mb-4">Edit Text Box</h3>
            <div class="space-y-3">
                <div>
                    <label class="block text-sm font-medium mb-1">Text:</label>
                    <textarea id="textBoxContent" rows="6" maxlength="300" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-base resize-none" placeholder="Enter your text here (up to 300 characters)..."></textarea>
                    <div class="flex justify-between items-center mt-1">
                        <span class="text-xs text-gray-500 dark:text-gray-400">Up to 300 characters</span>
                        <span id="charCount" class="text-xs text-gray-500 dark:text-gray-400">0/300</span>
                    </div>
                </div>
                <div>
                    <label class="block text-sm font-medium mb-1">Font Size:</label>
                    <select id="textBoxFontSize" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-base">
                        <option value="10">10px</option>
                        <option value="12">12px</option>
                        <option value="14" selected>14px</option>
                        <option value="16">16px</option>
                        <option value="18">18px</option>
                        <option value="20">20px</option>
                        <option value="24">24px</option>
                    </select>
                </div>
            </div>
            <div class="flex justify-end space-x-3 mt-6">
                <button onclick="closeTextBoxModal()" class="px-4 py-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded text-base">Cancel</button>
                <button onclick="saveTextBoxInfo()" class="px-4 py-2 bg-primary text-white hover:bg-primary/90 rounded text-base">Save</button>
            </div>
        </div>
    </div>

    <!-- Individual Info Modal -->
    <div id="infoModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg max-w-sm w-full mx-4">
            <h3 class="text-lg font-semibold mb-4">Individual Information</h3>
            <div class="space-y-3">
                <div>
                    <label class="block text-sm font-medium mb-1">Name:</label>
                    <input type="text" id="individualName" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-base">
                </div>
                <div>
                    <label class="block text-sm font-medium mb-1">Birth Year:</label>
                    <input type="text" id="individualBirth" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-base">
                </div>
                <div>
                    <label class="block text-sm font-medium mb-1">Fill Character (single letter/digit):</label>
                    <input type="text" id="individualFillChar" maxlength="1" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-base" placeholder="A, 1, X, etc.">
                </div>
                
                <!-- Disorder Patterns -->
                <div class="border-t border-gray-200 dark:border-gray-600 pt-3 mt-3">
                    <label class="block text-sm font-medium mb-2">Disorder Patterns by Quadrant:</label>
                    <div class="grid grid-cols-2 gap-3">
                        <div>
                            <label class="block text-xs mb-1">Top-Left:</label>
                            <select id="disorderTL" class="w-full px-1 py-1 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-xs">
                                <option value="">None</option>
                            </select>
                        </div>
                        <div>
                            <label class="block text-xs mb-1">Top-Right:</label>
                            <select id="disorderTR" class="w-full px-1 py-1 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-xs">
                                <option value="">None</option>
                            </select>
                        </div>
                        <div>
                            <label class="block text-xs mb-1">Bottom-Left:</label>
                            <select id="disorderBL" class="w-full px-1 py-1 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-xs">
                                <option value="">None</option>
                            </select>
                        </div>
                        <div>
                            <label class="block text-xs mb-1">Bottom-Right:</label>
                            <select id="disorderBR" class="w-full px-1 py-1 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-xs">
                                <option value="">None</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div>
                    <label class="block text-sm font-medium mb-1">Notes:</label>
                    <textarea id="individualNotes" rows="3" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-base"></textarea>
                </div>
                
                <!-- Twin Information -->
                <div class="border-t border-gray-200 dark:border-gray-600 pt-3 mt-3">
                    <label class="block text-sm font-medium mb-2">Twin Information:</label>
                    <div class="space-y-2">
                        <label class="flex items-center">
                            <input type="checkbox" id="isTwin" class="mr-2">
                            <span class="text-sm">This individual is a twin</span>
                        </label>
                        <div id="twinGroupDiv" class="hidden">
                            <label class="block text-xs mb-1">Twin Group ID (same for all twins in the group):</label>
                            <input type="text" id="twinGroup" class="w-full px-2 py-1 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-sm" placeholder="e.g., twins1, triplets1">
                        </div>
                    </div>
                </div>
                
                <!-- Display Options -->
                <div class="border-t border-gray-200 dark:border-gray-600 pt-3 mt-3">
                    <label class="block text-sm font-medium mb-2">Display Options:</label>
                    <div class="space-y-2">
                        <label class="flex items-center">
                            <input type="checkbox" id="showName" class="mr-2">
                            <span class="text-sm">Show Name</span>
                        </label>
                        <label class="flex items-center">
                            <input type="checkbox" id="showBirth" class="mr-2">
                            <span class="text-sm">Show Birth Year</span>
                        </label>
                        <label class="flex items-center">
                            <input type="checkbox" id="showNotes" class="mr-2">
                            <span class="text-sm">Show Notes</span>
                        </label>
                    </div>
                </div>
            </div>
            <div class="flex justify-end space-x-3 mt-6">
                <button onclick="closeInfoModal()" class="px-4 py-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded text-base">Cancel</button>
                <button onclick="saveIndividualInfo()" class="px-4 py-2 bg-primary text-white hover:bg-primary/90 rounded text-base">Save</button>
            </div>
        </div>
    </div>

    <!-- Instructions Modal -->
    <div id="instructionsModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg max-w-4xl w-full mx-4 max-h-screen overflow-y-auto">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-semibold">📝 How to Use Fast Family Tree</h3>
                <button onclick="closeInstructionsModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 text-xl">✕</button>
            </div>
            <div class="space-y-4">
                <div>
                    <h4 class="text-md font-semibold mb-3 text-primary">Getting Started</h4>
                    <ul class="text-sm text-gray-700 dark:text-gray-300 space-y-1 ml-4">
                        <li>• Click on symbol buttons in the toolbar to select a tool, then click on the canvas to place symbols</li>
                        <li>• Drag symbols directly from the toolbar onto the canvas for instant placement</li>
                        <li>• Use the Templates button to quickly add common 3-generation family structures</li>
                        <li>• Symbols automatically snap to generation lines when placed or moved</li>
                    </ul>
                </div>
                
                <div>
                    <h4 class="text-md font-semibold mb-3 text-primary">Creating Relationships</h4>
                    <ul class="text-sm text-gray-700 dark:text-gray-300 space-y-1 ml-4">
                        <li>• <strong>Smart Family Connection:</strong> Select parents and children, then click "👨‍👩‍👧‍👦 Connect as Family" for automatic connections</li>
                        <li>• <strong>Individual Connections:</strong> Use Marriage, Consanguineous, or Offspring tools to connect specific individuals</li>
                        <li>• <strong>Complex Relationships:</strong> Right-click individuals to add half-siblings or donors to pregnancies</li>
                    </ul>
                </div>
                
                <div>
                    <h4 class="text-md font-semibold mb-3 text-primary">Adding Medical Information</h4>
                    <ul class="text-sm text-gray-700 dark:text-gray-300 space-y-1 ml-4">
                        <li>• Create disorder patterns in the legend with custom names and visual patterns</li>
                        <li>• Double-click individuals to assign patterns to different quadrants of their symbols</li>
                        <li>• Add detailed medical notes that can be shown or hidden on the final pedigree</li>
                        <li>• Use the Deceased tool to mark individuals who have passed away</li>
                    </ul>
                </div>
                
                <div>
                    <h4 class="text-md font-semibold mb-3 text-primary">Selection and Editing</h4>
                    <ul class="text-sm text-gray-700 dark:text-gray-300 space-y-1 ml-4">
                        <li>• Click the Select tool, then click items to select them or drag to select multiple items</li>
                        <li>• Use Ctrl+click to add or remove items from your selection</li>
                        <li>• Copy and paste selections to duplicate family structures</li>
                        <li>• Double-click any symbol to edit its information and display options</li>
                    </ul>
                </div>
                
                <div>
                    <h4 class="text-md font-semibold mb-3 text-primary">Saving and Sharing</h4>
                    <ul class="text-sm text-gray-700 dark:text-gray-300 space-y-1 ml-4">
                        <li>• <strong>Save Canvas:</strong> Downloads your project as a JSON file that you can reload later</li>
                        <li>• <strong>Download PDF:</strong> Creates a professional PDF with legends and proper scaling</li>
                        <li>• <strong>Privacy:</strong> All data stays on your device - nothing is sent to servers</li>
                        <li>• Use keyboard shortcuts like Ctrl+C/V for copy/paste and Ctrl+Z for undo</li>
                    </ul>
                </div>
            </div>
            <div class="flex justify-end mt-6">
                <button onclick="closeInstructionsModal()" class="px-4 py-2 bg-primary text-white hover:bg-primary/90 rounded text-base">Close</button>
            </div>
        </div>
    </div>

    <!-- Keyboard Shortcuts Modal -->
    <div id="keyboardShortcutsModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden p-4">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg max-w-2xl w-full max-h-full overflow-hidden flex flex-col">
            <div class="flex justify-between items-center p-6 pb-4 border-b border-gray-200 dark:border-gray-600">
                <h3 class="text-lg font-semibold">⌨️ Keyboard Shortcuts</h3>
                <button onclick="closeKeyboardShortcutsModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 text-xl font-bold">✕</button>
            </div>
            
            <div class="flex-1 overflow-y-auto p-6 pt-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-3 text-sm">
                    <div class="flex justify-between items-center py-1">
                        <span>Copy selected items</span>
                        <code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded text-xs">Ctrl+C</code>
                    </div>
                    <div class="flex justify-between items-center py-1">
                        <span>Paste from clipboard</span>
                        <code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded text-xs">Ctrl+V</code>
                    </div>
                    <div class="flex justify-between items-center py-1">
                        <span>Select all items</span>
                        <code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded text-xs">Ctrl+A</code>
                    </div>
                    <div class="flex justify-between items-center py-1">
                        <span>Undo last action</span>
                        <code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded text-xs">Ctrl+Z</code>
                    </div>
                    <div class="flex justify-between items-center py-1">
                        <span>Delete selected items</span>
                        <code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded text-xs">Delete</code>
                    </div>
                    <div class="flex justify-between items-center py-1">
                        <span>Edit item (double-click)</span>
                        <code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded text-xs">Double-click</code>
                    </div>
                </div>
            </div>
            
            <div class="flex justify-end p-6 pt-4 border-t border-gray-200 dark:border-gray-600">
                <button onclick="closeKeyboardShortcutsModal()" class="px-4 py-2 bg-primary text-white hover:bg-primary/90 rounded text-base">Close</button>
            </div>
        </div>
    </div>

    <!-- Templates Modal -->
    <div id="templatesModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg max-w-2xl w-full mx-4 max-h-screen overflow-y-auto">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-semibold">📋 Family Tree Templates</h3>
                <button onclick="closeTemplatesModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 text-xl">✕</button>
            </div>
            
            <p class="text-sm text-gray-600 dark:text-gray-400 mb-6">
                Choose a template to quickly add a common family structure to your pedigree.
            </p>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div class="border border-gray-200 dark:border-gray-600 rounded-lg p-4 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors cursor-pointer" onclick="insertTemplate('maleWithGrandparents')">
                    <div class="text-center">
                        <div class="text-2xl mb-2">👦👨👴</div>
                        <h4 class="font-medium text-sm mb-3">Male child, 3 generations</h4>
                        <button class="px-3 py-1 bg-blue-500 text-white text-xs rounded hover:bg-blue-600 transition-colors">
                            Insert Template
                        </button>
                    </div>
                </div>
                
                <div class="border border-gray-200 dark:border-gray-600 rounded-lg p-4 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors cursor-pointer" onclick="insertTemplate('femaleWithGrandparents')">
                    <div class="text-center">
                        <div class="text-2xl mb-2">👧👩👵</div>
                        <h4 class="font-medium text-sm mb-3">Female child, 3 generations</h4>
                        <button class="px-3 py-1 bg-pink-500 text-white text-xs rounded hover:bg-pink-600 transition-colors">
                            Insert Template
                        </button>
                    </div>
                </div>
                
                <div class="border border-gray-200 dark:border-gray-600 rounded-lg p-4 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors cursor-pointer" onclick="insertTemplate('pregnancyWithGrandparents')">
                    <div class="text-center">
                        <div class="text-2xl mb-2">🤰👶👴</div>
                        <h4 class="font-medium text-sm mb-3">Pregnancy, 3 generations</h4>
                        <button class="px-3 py-1 bg-purple-500 text-white text-xs rounded hover:bg-purple-600 transition-colors">
                            Insert Template
                        </button>
                    </div>
                </div>
            </div>
            
            <div class="flex justify-end mt-6">
                <button onclick="closeTemplatesModal()" class="px-4 py-2 bg-gray-500 text-white hover:bg-gray-600 rounded text-base">Close</button>
            </div>
        </div>
    </div>

    <script>
        // Safe storage wrapper for sandboxed environments
        const safeStorage = {
            getItem: function(key) {
                try {
                    return localStorage.getItem(key);
                } catch (e) {
                    // Fallback to sessionStorage or memory storage
                    try {
                        return sessionStorage.getItem(key);
                    } catch (e2) {
                        return this.memoryStorage[key] || null;
                    }
                }
            },
            setItem: function(key, value) {
                try {
                    localStorage.setItem(key, value);
                } catch (e) {
                    // Fallback to sessionStorage or memory storage
                    try {
                        sessionStorage.setItem(key, value);
                    } catch (e2) {
                        this.memoryStorage[key] = value;
                    }
                }
            },
            memoryStorage: {}
        };

        // Dark mode functionality
        function toggleDarkMode() {
            document.documentElement.classList.toggle('dark');
            safeStorage.setItem('darkMode', document.documentElement.classList.contains('dark'));
            initSymbolPreviews(); // Refresh symbol previews
        }

        // Initialize dark mode from storage
        const savedDarkMode = safeStorage.getItem('darkMode');
        if (savedDarkMode === 'true') {
            document.documentElement.classList.add('dark');
        } else if (savedDarkMode === null && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
            document.documentElement.classList.add('dark');
        }

        // Listen for system dark mode changes
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {
            if (safeStorage.getItem('darkMode') === null) {
                if (event.matches) {
                    document.documentElement.classList.add('dark');
                } else {
                    document.documentElement.classList.remove('dark');
                }
                initSymbolPreviews();
            }
        });

        // All the existing JavaScript code from the original app goes here...
        // (I'll include the essential parts to keep this response manageable)

        // Canvas setup
        const canvas = document.getElementById('pedigreeCanvas');
        const ctx = canvas.getContext('2d');
        
        // App state
        let currentTool = null;
        let individuals = [];
        let connections = [];
        let textBoxes = [];
        let probandArrows = [];
        let separationSymbols = [];
        let selectedItem = null;
        let selectedIndividuals = [];
        let undoHistory = [];
        let clipboard = { individuals: [], connections: [], textBoxes: [] };
        
        // Symbol size
        const SYMBOL_SIZE = 40;
        const SYMBOL_RADIUS = SYMBOL_SIZE / 2;
        const SNAP_LINES = [150, 300, 450, 600];
        const SNAP_THRESHOLD = 28;
        
        // Pattern system
        let patternCounter = 0;
        let patternDefinitions = [];

        // Individual class
        class Individual {
            constructor(x, y, type, id) {
                this.x = x;
                this.y = y;
                this.type = type;
                this.id = id;
                this.name = '';
                this.birth = '';
                this.notes = '';
                this.selected = false;
                this.deceased = false;
                // Add other properties as needed
            }

            draw(ctx) {
                const isDark = document.documentElement.classList.contains('dark');
                ctx.strokeStyle = this.selected ? '#5D5CDE' : (isDark ? '#ffffff' : '#000000');
                ctx.fillStyle = isDark ? '#ffffff' : '#000000';
                ctx.lineWidth = this.selected ? 3 : 2;

                switch (this.type) {
                    case 'male':
                        ctx.strokeRect(this.x - SYMBOL_RADIUS, this.y - SYMBOL_RADIUS, SYMBOL_SIZE, SYMBOL_SIZE);
                        break;
                    case 'female':
                        ctx.beginPath();
                        ctx.arc(this.x, this.y, SYMBOL_RADIUS, 0, 2 * Math.PI);
                        ctx.stroke();
                        break;
                    case 'unknown':
                        ctx.beginPath();
                        ctx.moveTo(this.x, this.y - SYMBOL_RADIUS);
                        ctx.lineTo(this.x + SYMBOL_RADIUS, this.y);
                        ctx.lineTo(this.x, this.y + SYMBOL_RADIUS);
                        ctx.lineTo(this.x - SYMBOL_RADIUS, this.y);
                        ctx.closePath();
                        ctx.stroke();
                        break;
                    // Add other symbol types
                }

                // Draw deceased slash if applicable
                if (this.deceased) {
                    ctx.strokeStyle = isDark ? '#ffffff' : '#000000';
                    ctx.lineWidth = 3;
                    ctx.beginPath();
                    const extension = 5;
                    ctx.moveTo(this.x - SYMBOL_RADIUS - extension, this.y + SYMBOL_RADIUS + extension);
                    ctx.lineTo(this.x + SYMBOL_RADIUS + extension, this.y - SYMBOL_RADIUS - extension);
                    ctx.stroke();
                }
            }

            contains(x, y) {
                switch (this.type) {
                    case 'male':
                        return x >= this.x - SYMBOL_RADIUS && x <= this.x + SYMBOL_RADIUS &&
                               y >= this.y - SYMBOL_RADIUS && y <= this.y + SYMBOL_RADIUS;
                    case 'female':
                        return Math.sqrt((x - this.x) ** 2 + (y - this.y) ** 2) <= SYMBOL_RADIUS;
                    default:
                        return Math.sqrt((x - this.x) ** 2 + (y - this.y) ** 2) <= SYMBOL_RADIUS;
                }
            }
        }

        // Initialize symbol previews
        function initSymbolPreviews() {
            const previews = document.querySelectorAll('.symbol-preview');
            previews.forEach((canvas, index) => {
                const ctx = canvas.getContext('2d');
                ctx.clearRect(0, 0, 24, 24);
                
                const isDark = document.documentElement.classList.contains('dark');
                ctx.strokeStyle = isDark ? '#ffffff' : '#000000';
                ctx.fillStyle = isDark ? '#ffffff' : '#000000';
                ctx.lineWidth = 2;

                switch (index) {
                    case 0: // Male
                        ctx.strokeRect(4, 4, 16, 16);
                        break;
                    case 1: // Female  
                        ctx.beginPath();
                        ctx.arc(12, 12, 8, 0, 2 * Math.PI);
                        ctx.stroke();
                        break;
                    case 2: // Unknown
                        ctx.beginPath();
                        ctx.moveTo(12, 4);
                        ctx.lineTo(20, 12);
                        ctx.lineTo(12, 20);
                        ctx.lineTo(4, 12);
                        ctx.closePath();
                        ctx.stroke();
                        break;
                    // Add other symbol previews
                }
            });
        }

        // Tool selection
        function setTool(tool) {
            currentTool = tool;
            document.querySelectorAll('button[id^="btn-"]').forEach(btn => {
                btn.classList.remove('selected-symbol');
            });
            
            const toolButton = document.getElementById(`btn-${tool}`);
            if (toolButton) {
                toolButton.classList.add('selected-symbol');
            }
            
            canvas.style.cursor = tool === 'select' ? 'default' : 'crosshair';
        }

        // Event listeners
        document.getElementById('btn-male').addEventListener('click', () => setTool('male'));
        document.getElementById('btn-female').addEventListener('click', () => setTool('female'));
        document.getElementById('btn-unknown').addEventListener('click', () => setTool('unknown'));
        document.getElementById('btn-select').addEventListener('click', () => setTool('select'));
        
        // Modal button listeners
        document.getElementById('btn-jump-instructions').addEventListener('click', openInstructionsModal);
        document.getElementById('btn-keyboard-shortcuts').addEventListener('click', openKeyboardShortcutsModal);
        document.getElementById('btn-templates').addEventListener('click', openTemplatesModal);
        document.getElementById('btn-download').addEventListener('click', downloadPDF);
        document.getElementById('btn-save').addEventListener('click', saveCanvas);
        document.getElementById('btn-load').addEventListener('click', loadCanvas);

        // Canvas events
        canvas.addEventListener('click', handleCanvasClick);

        function handleCanvasClick(event) {
            const rect = canvas.getBoundingClientRect();
            const x = event.clientX - rect.left;
            const y = event.clientY - rect.top;
            
            if (['male', 'female', 'unknown'].includes(currentTool)) {
                addIndividual(x, y, currentTool);
            }
        }

        function addIndividual(x, y, type) {
            const snappedY = snapToLine(y);
            const id = Date.now();
            const individual = new Individual(x, snappedY, type, id);
            individuals.push(individual);
            draw();
        }

        function snapToLine(y) {
            let closestLine = y;
            let minDistance = SNAP_THRESHOLD;
            
            for (let line of SNAP_LINES) {
                const distance = Math.abs(y - line);
                if (distance < minDistance) {
                    minDistance = distance;
                    closestLine = line;
                }
            }
            
            return closestLine;
        }

        function draw() {
            const rect = canvas.getBoundingClientRect();
            canvas.width = rect.width * window.devicePixelRatio;
            canvas.height = rect.height * window.devicePixelRatio;
            ctx.scale(window.devicePixelRatio, window.devicePixelRatio);
            
            const isDark = document.documentElement.classList.contains('dark');
            ctx.fillStyle = isDark ? '#1f2937' : '#ffffff';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            
            // Draw generation lines
            ctx.strokeStyle = isDark ? '#6b7280' : '#9ca3af';
            ctx.lineWidth = 1;
            ctx.setLineDash([3, 6]);
            ctx.globalAlpha = 0.6;
            
            SNAP_LINES.forEach((lineY, index) => {
                ctx.beginPath();
                ctx.moveTo(0, lineY);
                ctx.lineTo(canvas.width, lineY);
                ctx.stroke();
            });
            
            ctx.setLineDash([]);
            ctx.globalAlpha = 1.0;
            
            // Draw individuals
            individuals.forEach(individual => individual.draw(ctx));
        }

        // Modal functions
        function openInstructionsModal() {
            document.getElementById('instructionsModal').classList.remove('hidden');
        }

        function closeInstructionsModal() {
            document.getElementById('instructionsModal').classList.add('hidden');
        }

        function openKeyboardShortcutsModal() {
            document.getElementById('keyboardShortcutsModal').classList.remove('hidden');
        }

        function closeKeyboardShortcutsModal() {
            document.getElementById('keyboardShortcutsModal').classList.add('hidden');
        }

        function openTemplatesModal() {
            document.getElementById('templatesModal').classList.remove('hidden');
        }
        
        function closeTemplatesModal() {
            document.getElementById('templatesModal').classList.add('hidden');
        }

        function insertTemplate(templateType) {
            // Template insertion logic here
            closeTemplatesModal();
        }

        // PDF Download (simplified for GitHub Pages)
        function downloadPDF() {
            if (individuals.length === 0) {
                alert("Please create a pedigree before downloading.");
                return;
            }

            try {
                const { jsPDF } = window.jspdf;
                const pdf = new jsPDF({
                    orientation: 'landscape',
                    unit: 'mm',
                    format: 'a4'
                });

                pdf.setFontSize(16);
                pdf.setFont('helvetica', 'bold');
                pdf.text('Family Pedigree Chart', 20, 20);
                
                pdf.setFontSize(10);
                pdf.setFont('helvetica', 'normal');
                const currentDate = new Date().toLocaleDateString();
                pdf.text(`Generated on: ${currentDate}`, 20, 28);

                // Create canvas for export
                const exportCanvas = document.createElement('canvas');
                exportCanvas.width = canvas.width;
                exportCanvas.height = canvas.height;
                const exportCtx = exportCanvas.getContext('2d');
                
                // Draw to export canvas (simplified)
                exportCtx.fillStyle = '#ffffff';
                exportCtx.fillRect(0, 0, exportCanvas.width, exportCanvas.height);
                
                individuals.forEach(individual => individual.draw(exportCtx));
                
                const canvasImageData = exportCanvas.toDataURL('image/png');
                pdf.addImage(canvasImageData, 'PNG', 20, 35, 250, 150);

                const filename = `Family_Pedigree_${currentDate.replace(/\//g, '-')}.pdf`;
                pdf.save(filename);
                
            } catch (error) {
                console.error('PDF generation error:', error);
                alert("Error generating PDF. Please try again.");
            }
        }

        // Save/Load functions (using localStorage for GitHub Pages)
        function saveCanvas() {
            try {
                const canvasState = {
                    version: "1.0",
                    created: new Date().toISOString(),
                    individuals: individuals,
                    connections: connections,
                    textBoxes: textBoxes,
                    probandArrows: probandArrows,
                    patternDefinitions: patternDefinitions
                };
                
                const jsonString = JSON.stringify(canvasState, null, 2);
                const blob = new Blob([jsonString], { type: 'application/json' });
                const url = URL.createObjectURL(blob);
                
                const a = document.createElement('a');
                a.href = url;
                a.download = `family-tree-${new Date().toISOString().split('T')[0]}.json`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                
                URL.revokeObjectURL(url);
                
            } catch (error) {
                console.error('Error saving canvas:', error);
                alert('Error saving canvas. Please try again.');
            }
        }

        function loadCanvas() {
            document.getElementById('loadFileInput').click();
        }

        function loadCanvasFromFile(event) {
            const file = event.target.files[0];
            if (!file) return;
            
            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const canvasState = JSON.parse(e.target.result);
                    
                    // Restore state (simplified)
                    individuals = canvasState.individuals || [];
                    connections = canvasState.connections || [];
                    textBoxes = canvasState.textBoxes || [];
                    probandArrows = canvasState.probandArrows || [];
                    patternDefinitions = canvasState.patternDefinitions || [];
                    
                    // Restore individual objects
                    individuals = individuals.map(indData => {
                        const ind = new Individual(indData.x, indData.y, indData.type, indData.id);
                        Object.assign(ind, indData);
                        return ind;
                    });
                    
                    draw();
                    
                } catch (error) {
                    console.error('Error loading canvas:', error);
                    alert('Error loading canvas file.');
                }
            };
            
            reader.readAsText(file);
            event.target.value = '';
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            initSymbolPreviews();
            setTool('select');
            draw();
        });

        // Handle window resize
        window.addEventListener('resize', () => {
            setTimeout(draw, 100);
        });
    </script>
</body>
</html>
